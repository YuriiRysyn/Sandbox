{"version":3,"sources":["SpeakingTest/VideoPlayer.js","App.jsx","index.js"],"names":["VideoPlayer","player","isAutoPlayEnabled","setIsAutoPlayEnabled","playerParams","ref","className","url","controls","width","playing","isPlaying","playsinline","onStart","App","React","createRef","useState","setPlayerParams","onClick","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"yOAIaA,G,MAAc,SAAC,GAKrB,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,aAgBA,OACE,kBAAC,IAAD,CACEC,IAAKJ,EACLK,UAAU,eAGVC,IAAI,kEAEJC,UAAU,EACVC,MAAM,QAENC,QAASN,EAAaO,UACtBC,aAAa,EAmBbC,QArCkB,WACfX,GACHC,GAAqB,Q,MCqDZW,MA7Df,WACE,IAAMb,EAASc,IAAMC,YADR,EAEqCC,oBAAS,GAF9C,mBAENf,EAFM,KAEaC,EAFb,OAG2Bc,mBAAS,CAAEN,WAAW,IAHjD,mBAGNP,EAHM,KAGQc,EAHR,KAiBb,OACE,oCAqBE,kBAAC,EAAD,CACEjB,OAAQA,EACRC,kBAAmBA,EACnBC,qBAAsBA,EACtBC,aAAcA,KAEdF,GACA,4BACEiB,QAAS,WACPD,EAAgB,2BAAKd,GAAN,IAAoBO,WAAW,KAC9CS,YAAW,WACTF,EAAgB,2BAAKd,GAAN,IAAoBO,WAAW,OAC7C,KALP,OAQO,OC9DfU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a7549cd6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactPlayer from 'react-player/file';\nimport canAutoPlay from 'can-autoplay';\n\nexport const VideoPlayer = ({\n  player,\n  isAutoPlayEnabled,\n  setIsAutoPlayEnabled,\n  playerParams,\n}) => {\n  // canAutoPlay\n  //     .video({timeout: 100, muted: true})\n  //     .then(({result, error}) => {\n  //         if(result === false){\n  //             console.warn('Error did occur: ', error)\n  //         }\n  //     })\n\n  const checkAutoPlay = () => {\n    if (!isAutoPlayEnabled) {\n      setIsAutoPlayEnabled(true);\n    }\n  };\n  // const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return (\n    <ReactPlayer\n      ref={player}\n      className=\"react-player\"\n      // url='https://media.w3.org/2010/05/sintel/trailer_hd.mp4'\n      // url={url}\n      url=\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\n      // url=\"https://d1dgcz2mzc8ifr.cloudfront.net/speaking-test-3qs-jack/index.m3u8\"\n      controls={false}\n      width=\"320px\"\n      // height=\"600px\"\n      playing={playerParams.isPlaying}\n      playsinline={true}\n      // config={{\n      //   file: {\n      //     forceHLS: true,\n      //     forceVideo: true,\n      //     hlsVersion: '0.12.4',\n      //     attributes: {\n      //       // poster: feed && feed.actionUrl && feed.actionUrl.image,\n      //       disablePictureInPicture: true,\n      //     },\n      //   },\n      // }}\n      // onDuration={handleDuration}\n      // onProgress={handleProgress}\n      // starttime={12}\n      // onStart={20}\n      // start={12}\n      // end={22}\n      // muted={true}\n      onStart={checkAutoPlay}\n    />\n  );\n};\n\n// export default VideoPlayer;\n","import React, { useState } from 'react';\n// import TypeScriptDev from './TypeScriptDev.tsx';\n// import Player from './Player';\n// import VideoPart from './SpeakingTest/VideoPart/VideoPart';\n// import { AppCircle } from './Circle/AppCircle';\n// import { WaweSound } from './WaweSound/WaweSound';\n\n// import { Timer } from './Timer/Timer';\n\nimport { VideoPlayer } from './SpeakingTest/VideoPlayer.js';\nimport './App.scss';\n\nfunction App() {\n  const player = React.createRef();\n  const [isAutoPlayEnabled, setIsAutoPlayEnabled] = useState(false);\n  const [playerParams, setPlayerParams] = useState({ isPlaying: true });\n\n\n  // let [count, setCount] = useState(0);\n\n  // const dec = () => {\n  //   setCount(prev => prev + 1);\n  //   console.log(count);\n  //   setCount(prev => prev + 1);\n  //   console.log(count);\n\n  //   setCount(prev => prev + 1);\n  //   console.log(count);\n  // };\n  return (\n    <>\n      {/* <TypeScriptDev /> */}\n      {/* <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          FORM\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          Posts\n        </div>\n        <div className=\"col\">\n          Fethced posts\n        </div>\n      </div>\n    </div> */}\n\n      {/* <AppCircle /> */}\n      {/* <WaweSound /> */}\n      {/* <Timer /> */}\n      <VideoPlayer\n        player={player}\n        isAutoPlayEnabled={isAutoPlayEnabled}\n        setIsAutoPlayEnabled={setIsAutoPlayEnabled}\n        playerParams={playerParams}\n      />\n      {!isAutoPlayEnabled && (\n        <button\n          onClick={() => {\n            setPlayerParams({ ...playerParams, isPlaying: false });\n            setTimeout(() => {\n              setPlayerParams({ ...playerParams, isPlaying: true });\n            }, 1);\n          }}\n        >\n          Play{' '}\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nconst a = arg => arg - 2;\n"],"sourceRoot":""}