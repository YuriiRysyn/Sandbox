{"version":3,"sources":["App.jsx","index.js"],"names":["App","React","createRef","useState","isPlaying","playedSeconds","loadedSeconds","url","appId","ReactDOM","render","document","getElementById"],"mappings":"wPAyGeA,MAlGf,WACiBC,IAAMC,UAAU,IAA/B,IADa,EAEqCC,oBAAS,GAF9C,gCAG2BA,mBAAS,CAC/CC,WAAW,EACXC,cAAe,GACfC,cAAe,MANJ,mBAsBPC,GAtBO,UAsBD,yCAwBZ,OACE,oCAiBE,kBAAC,iBAAD,CAAgBA,IAAKA,EAAKC,MAAO,oBAC/B,kBAAC,gBAAD,CAAeD,IAAKA,IACnB,UAAYA,KCrErBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.710ab125.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FacebookButton, FacebookCount } from 'react-social';\n\nimport { Helmet } from 'react-helmet';\nimport { VideoPlayer } from './SpeakingTest/VideoPlayer.js';\nimport './App.scss';\n\nfunction App() {\n  const player = React.createRef({});\n  const [isAutoPlayEnabled, setIsAutoPlayEnabled] = useState(false);\n  const [playerParams, setPlayerParams] = useState({\n    isPlaying: false,\n    playedSeconds: '',\n    loadedSeconds: '',\n  });\n\n  const handleProgress = progress => {\n    alert('progress--', progress);\n    // const currentPlayedSeconds = Math.round(progress.playedSeconds);\n    const currentPlayedSeconds = Math.round(progress);\n    const currentLoadedSeconds = Math.round(progress.loadedSeconds);\n\n    setPlayerParams({\n      ...playerParams,\n      playedSeconds: currentPlayedSeconds,\n      loadedSeconds: currentLoadedSeconds,\n    });\n  };\n\n  const url = 'https://yuriirysyn.github.io/Sandbox/';\n  // const [isPlaying, setIsPlaying] = useState(false);\n\n  // if (player.current) {\n  //   player.current.ontimeupdate = handleProgress;\n  // }\n\n  // useEffect(() => {\n  //   if (!isPlaying && playerParams.isPlaying) {\n  //     setIsPlaying(true);\n  //   } else if (isPlaying && !playerParams.isPlaying) {\n  //     setIsPlaying(false);\n  //   }\n  // }, [playerParams]);\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     if (!isPlaying) {\n  //       // player.current.pause();\n  //     } else {\n  //       player.current.play();\n  //     }\n  //   }, 1);\n  // }, [isPlaying]);\n  return (\n    <>\n      {/* <Helmet>\n        <meta property=\"og:title\" content=\"Speechace speaking test\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:image\"\n          content=\"https://picsum.photos/id/52/1200/600\"\n        />\n        <meta\n          property=\"og:description\"\n          content=\"Speechace speaking test result for \"\n        />\n        <meta\n          property=\"og:url\"\n          content=\"https://www.speechace.com/speaking-test/\"\n        />\n      </Helmet> */}\n      <FacebookButton url={url} appId={'4634286036628789'}>\n        <FacebookCount url={url} />\n        {' Share ' + url}\n      </FacebookButton>\n    </>\n    // <div>\n\n    //   <VideoPlayer\n    //     player={player}\n    //     isAutoPlayEnabled={isAutoPlayEnabled}\n    //     setIsAutoPlayEnabled={setIsAutoPlayEnabled}\n    //     playerParams={playerParams}\n    //     handleProgress={handleProgress}\n    //   />\n    //   <p>{playerParams.playedSeconds}</p>\n    //   {!isAutoPlayEnabled && (\n    //     <button\n    //       onClick={() => {\n    //         // setPlayerParams({ ...playerParams, isPlaying: false });\n    //         // setTimeout(() => {\n    //         //   setPlayerParams({ ...playerParams, isPlaying: true });\n    //         // }, 100);\n    //         setPlayerParams({ ...playerParams, isPlaying: true });\n\n    //         // player.current.play()\n    //       }}\n    //     >\n    //       Play {player.current}\n    //     </button>\n    //   )}\n    // </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nconst a = arg => arg - 2;\n"],"sourceRoot":""}